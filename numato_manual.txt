he table below has more detailed information about available commands.

No.	Command	Example	Description
1	ver	ver	Returns current firmware version.
2	id	id get
id set xxxxxxxx	Id get reads the module ID. Id set will assign a new ID to the module. “x” stands for alphanumeric characters including symbols. The new ID must be exactly 8 characters in length.
3	gpio	gpio set x	Sets the GPIO output status to high. Here “x” is the number of the GPIO. This command accepts GPIO number from 0 -7, total 8 values Please see examples below.
gpio set 0 – Sets GPIO 0 to high state
gpio set 4 – Sets GPIO 4 to high state
gpio clear x	Sets the GPIO output status to low. Here “x” is the number of the GPIO. This command accepts GPIO number from 0 -7, total 8 values. Please see examples below.

gpio clear 0 – Sets GPIO 0 to low state
gpio clear 4 – Sets GPIO 4to low state
gpio read x	Reads the digital input status present at the input mentioned. Here “x” stands for the number of GPIO. This command accepts GPIO number from 0 -7, total 8 values. The response will be either “on” or “off” depending on the current digital state of the GPIO. Please see examples below.

gpio read 0 – Reads GPIO 0 status
gpio read 4 – Reads GPIO 4 status
gpio
iomask xx	Set mask for selectively update multiple GPIOs with writeall/iodir command. A hexadecimal value(xx) must be specified with desired bit positions set to 0 or 1 with no “0x” prepended (eg 02, ff). A 0 in a bit position mask the corresponding GPIO and any update to that GPIO is ignored during writeall/iodir command. A 1 in a bit position will unmask that particular GPIO and any updates using writeall/iodir command will be applied to that GPIO. This mask does not affect the operation of set and clear commands.

gpio iomask ff – Unmask all GPIOs.
gpio iomask 00 – mask all GPIOs.
Refer Understanding readall/writeall commands for GPIO Modules to know more.
gpio
iodir xx	Sets the direction of all GPIO in a single operation. A hexadecimal value(xx) must be specified with desired bit positions set to 0 or 1 with no “0x” prepended (eg 02, ff). A 0 in a bit position configures that GPIO as output and 1 configures as input. Before using gpio readall/writeall commands, the direction of GPIO must be set using “gpio iodir xx” command. GPIO direction set by using iodir command will be modified with subsequent set/clear/read commands
(only affects the GPIO accessed using these commands).
gpio iodir 00 – Sets all GPIO to output.
Refer Understanding readall/writeall commands for GPIO Modules to know more.
gpio readall	Reads the status of all GPIO in a single operation. The return value will a hexadecimal number with binary value 1 at bit positions for GPIO in ON state and 0 for GPIO in OFF state. Eg: a return value 00 (binary 0000 0000) means all GPIO are OFF. A value FF (binary 1111 1111) means all GPIO are ON.
gpio readall – Reads all GPIO status.
Refer Understanding readall/writeall commands for GPIO Modules to know more.
gpio
writeall xx	Control all GPIO in a single operation. A hexadecimal value (xx) must be specified with desired bit positions set to 0 or 1. A value 0 at a bit position will turn off the corresponding GPIO. A value 1 at a bit position will turn on the corresponding GPIO.
gpio writeall ff – Sets all GPIO to high state.
Refer Understanding readall/writeall commands for GPIO Modules to know more.
4	adc	adc read x	Reads the analog voltage present at the ADC input mentioned. “x” stands for the number of ADC input. The response will be a number that ranges from 0 – 1023. Please see examples below.
adc read 0 – Reads analog input 0
adc read 4 – Reads analog input 4
NOTE!

For the commands like gpio read/set/clear, the gpio numbers greater than 9, should be given in upper case(A – V).
Egs :- gpio set A, gpio clear H
For the commands like gpio writeall/iomask/iodir, the value should be in lower case hexadecimal value(0000 – ffff).
Egs :- gpio writeall f9ce, gpio iodir a2d5, gpio iomask 4ba8
For the commands like gpio readall/notify on, the output will be showed in upper case hexadecimal value(0000 – FFFF).
Refer Understanding readall/writeall commands for GPIO Modules to know more.